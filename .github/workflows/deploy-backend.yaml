name: deploy-backend

on:
  push:
    branches:
      - main
      - feature/**
      - task/**
      - bugfix/**
      - hotfix/**
      - chore/**
    paths:
      - 'backend/**'
      - '.github/workflows/deploy-backend.yaml'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to (staging or production)'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_REGION: ${{ secrets.GCP_REGION }}
  ARTIFACT_REGISTRY_REPO: ${{ secrets.ARTIFACT_REGISTRY_REPO }}

jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [staging, production]

    if: |
      (matrix.environment == 'production' && github.ref == 'refs/heads/main') ||
      (matrix.environment == 'staging' && github.ref != 'refs/heads/main') ||
      github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}

      - name: Configure Docker to use Artifact Registry
        run: gcloud auth configure-docker ${{ env.GCP_REGION }}-docker.pkg.dev

      - name: Ensure Artifact Registry exists
        run: |
          gcloud artifacts repositories describe ${{ env.ARTIFACT_REGISTRY_REPO }} \
            --location=${{ env.GCP_REGION }} \
            --format="value(name)" || \
          gcloud artifacts repositories create ${{ env.ARTIFACT_REGISTRY_REPO }} \
            --repository-format=docker \
            --location=${{ env.GCP_REGION }} \
            --description="Docker repository for Go backend images"

      - name: Build and push Docker image
        run: |
          IMAGE_TAG="${{ github.sha }}"
          SERVICE_NAME="${{ matrix.environment == 'staging' && secrets.CLOUD_RUN_SERVICE_NAME_STAGING || secrets.CLOUD_RUN_SERVICE_NAME_PROD }}"
          FULL_IMAGE_NAME="${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_REPO }}/$SERVICE_NAME:$IMAGE_TAG"

          echo "Building Docker image for ${{ matrix.environment }}: $FULL_IMAGE_NAME"
          docker build -t $FULL_IMAGE_NAME backend/
          echo "Pushing Docker image: $FULL_IMAGE_NAME"
          docker push $FULL_IMAGE_NAME

      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ matrix.environment == 'staging' && secrets.CLOUD_RUN_SERVICE_NAME_STAGING || secrets.CLOUD_RUN_SERVICE_NAME_PROD }}
          region: ${{ env.GCP_REGION }}
          image: ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_REPO }}/$SERVICE_NAME:${{ github.sha }}
          env_vars: |
            GCP_PROJECT_ID=${{ env.GCP_PROJECT_ID }}
            ENVIRONMENT=${{ matrix.environment }}

      - name: Show deployed service URL
        run: |
          echo "Deployed URL for the ${{ matrix.environment }} backend:"
          gcloud run services describe ${{ matrix.environment == 'staging' && secrets.CLOUD_RUN_SERVICE_NAME_STAGING || secrets.CLOUD_RUN_SERVICE_NAME_PROD }} \
            --region=${{ env.GCP_REGION }} \
            --format="value(status.url)"
