name: deploy backend

on:
  push:
    branches:
      - main
      - feature/**
      - task/**
      - bugfix/**
      - hotfix/**
      - chore/**

    paths:
      - 'backend/**'
      - '.github/workflows/deploy-backend.yaml'

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_REGION: ${{ secrets.GCP_REGION }}
  ARTIFACT_REGISTRY_REPO: ${{ secrets.ARTIFACT_REGISTRY_REPO }}

jobs:
  deploy-staging-backend:
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}

      - name: Configure Docker to use Artifact Registry
        run: gcloud auth configure-docker ${{ env.GCP_REGION }}-docker.pkg.dev

      - name: Create Artifact Registry Repository (if it doesn't exist)
        run: |
          gcloud artifacts repositories describe ${{ env.ARTIFACT_REGISTRY_REPO }} \
            --location=${{ env.GCP_REGION }} \
            --format="value(name)" > /dev/null 2>&1 || \
          gcloud artifacts repositories create ${{ env.ARTIFACT_REGISTRY_REPO }} \
            --repository-format=docker \
            --location=${{ env.GCP_REGION }} \
            --description="Docker repository for Go backend images"

      - name: Build and push Docker image (staging)
        run: |
          IMAGE_TAG="${{ github.sha }}" 
          SERVICE_NAME="${{secrets.CLOUD_RUN_SERVICE_NAME_STAGING}}"
          FULL_IMAGE_NAME="${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_REPO }}/$SERVICE_NAME:$IMAGE_TAG"
          
          echo "Building Docker image for staging: $FULL_IMAGE_NAME"
          docker build -t $FULL_IMAGE_NAME backend/ 
          echo "Pushing Docker image to staging: $FULL_IMAGE_NAME"
          docker push $FULL_IMAGE_NAME

      - name: Deploy to Cloud Run (staging)
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ secrets.CLOUD_RUN_SERVICE_NAME_STAGING }}
          region: ${{ env.GCP_REGION }}
          image: ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_REPO }}/${{  secrets.CLOUD_RUN_SERVICE_NAME_STAGING  }}:${{ github.sha }}
          env_vars: |
            GCP_PROJECT_ID=${{ env.GCP_PROJECT_ID }} 
            ENVIRONMENT=staging
            service_account=${{ secrets.CLOUD_RUN_SERVICE_ACCOUNT }}@${{ env.GCP_PROJECT_ID }}.iam.gserviceaccount.com

      - name: Show deployed staging service URL
        run: |
          echo "Deployed URL for the Staging backend:"
          gcloud run services describe ${{ secrets.CLOUD_RUN_SERVICE_NAME_STAGING }} \
            --region=${{ env.GCP_REGION }} \
            --format="value(status.url)"

  deploy-prod-backend:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}

      - name: Configure Docker to use Artifact Registry
        run: gcloud auth configure-docker ${{ env.GCP_REGION }}-docker.pkg.dev

      - name: Create Artifact Registry Repository (if it doesn't exist)
        run: |
          gcloud artifacts repositories describe ${{ env.ARTIFACT_REGISTRY_REPO }} \
            --location=${{ env.GCP_REGION }} \
            --format="value(name)" > /dev/null 2>&1 || \
          gcloud artifacts repositories create ${{ env.ARTIFACT_REGISTRY_REPO }} \
            --repository-format=docker \
            --location=${{ env.GCP_REGION }} \
            --description="Docker repository for Go backend images"

      - name: Build and push Docker image (prod)
        run: |
          IMAGE_TAG="${{ github.sha }}" 
          SERVICE_NAME="${{secrets.CLOUD_RUN_SERVICE_NAME_PROD}}"
          FULL_IMAGE_NAME="${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_REPO }}/$SERVICE_NAME:$IMAGE_TAG"

          echo "Building Docker image for prod: $FULL_IMAGE_NAME"
          docker build -t $FULL_IMAGE_NAME backend/ 
          echo "Pushing Docker image to prod: $FULL_IMAGE_NAME"
          docker push $FULL_IMAGE_NAME

      - name: Deploy to Cloud Run (prod)
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ secrets.CLOUD_RUN_SERVICE_NAME_PROD }}
          region: ${{ env.GCP_REGION }}
          image: ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_REPO }}/${{  secrets.CLOUD_RUN_SERVICE_NAME_PROD  }}:${{ github.sha }}
          env_vars: |
            GCP_PROJECT_ID=${{ env.GCP_PROJECT_ID }} 
            ENVIRONMENT=production
            service_account=${{ secrets.CLOUD_RUN_SERVICE_ACCOUNT }}@${{ env.GCP_PROJECT_ID }}.iam.gserviceaccount.com

      - name: Show deployed prod service URL
        run: |
          echo "Deployed URL for the prod backend:"
          gcloud run services describe ${{ secrets.CLOUD_RUN_SERVICE_NAME_PROD }} \
            --region=${{ env.GCP_REGION }} \
            --format="value(status.url)"