name: Deploy Go Backend to Cloud Run

on:
  push:
    branches:
      - main
      - feature/**
      - task/**
      - bugfix/**
      - hotfix/**
      - chore/**

env:
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_REGION: ${{ secrets.GCP_REGION }}
  ARTIFACT_REGISTRY_REPO: ${{ secrets.ARTIFACT_REGISTRY_REPO }}

jobs:
  deploy-backend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set deployment variables
        id: vars
        run: |
          ENV_NAME="staging"
          CLOUD_RUN_SERVICE_NAME="${{ secrets.CLOUD_RUN_SERVICE_NAME_STAGING }}"

          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            ENV_NAME="prod"
            CLOUD_RUN_SERVICE_NAME="${{ secrets.CLOUD_RUN_SERVICE_NAME_PROD }}"
          fi

          echo "ENV_NAME=$ENV_NAME" >> $GITHUB_OUTPUT
          echo "CLOUD_RUN_SERVICE_NAME=$CLOUD_RUN_SERVICE_NAME" >> $GITHUB_OUTPUT
          
          echo "Determined Environment: $ENV_NAME"
          echo "Target Cloud Run Service: $CLOUD_RUN_SERVICE_NAME"

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.GCP_PROJECT_ID }}

      - name: Configure Docker to use Artifact Registry
        run: gcloud auth configure-docker ${{ env.GCP_REGION }}-docker.pkg.dev

      - name: Create Artifact Registry Repository (if it doesn't exist)
        run: |
          gcloud artifacts repositories describe ${{ env.ARTIFACT_REGISTRY_REPO }} \
            --location=${{ env.GCP_REGION }} \
            --format="value(name)" > /dev/null 2>&1 || \
          gcloud artifacts repositories create ${{ env.ARTIFACT_REGISTRY_REPO }} \
            --repository-format=docker \
            --location=${{ env.GCP_REGION }} \
            --description="Docker repository for Go backend images"

      - name: Build and push Docker image
        run: |
          IMAGE_TAG="${{ github.sha }}" 
          FULL_IMAGE_NAME="${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_REPO }}/${{ steps.vars.outputs.CLOUD_RUN_SERVICE_NAME }}:$IMAGE_TAG"
          
          echo "Building Docker image: $FULL_IMAGE_NAME"
          docker build -t $FULL_IMAGE_NAME .
          echo "Pushing Docker image: $FULL_IMAGE_NAME"
          docker push $FULL_IMAGE_NAME

      - name: Deploy to Cloud Run (${{ steps.vars.outputs.ENV_NAME }} environment)
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ steps.vars.outputs.CLOUD_RUN_SERVICE_NAME }}
          region: ${{ env.GCP_REGION }}
          image: ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_REPO }}/${{ steps.vars.outputs.CLOUD_RUN_SERVICE_NAME }}:${{ github.sha }}
          env_vars: |
            PORT=8080 
            GCP_PROJECT_ID=${{ env.GCP_PROJECT_ID }} 
            ENVIRONMENT=${{ steps.vars.outputs.ENV_NAME }} 

      - name: Show deployed service URL
        run: |
          echo "Deployed URL for the ${{ steps.vars.outputs.ENV_NAME }} backend:"
          gcloud run services describe ${{ steps.vars.outputs.CLOUD_RUN_SERVICE_NAME }} \
            --region=${{ env.GCP_REGION }} \
            --format="value(status.url)"