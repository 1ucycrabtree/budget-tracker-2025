{
  "swagger": "2.0",
  "info": {
    "description": "Backend service for automatically importing and categorising user transactions.",
    "title": "Auto Budget Tracker API",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "name": "Lucy Crabtree",
      "url": "https://github.com/1ucycrabtree"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "1.0"
  },
  "host": "localhost:8080",
  "basePath": "/",
  "paths": {
    "/analytics/forecast": {
      "get": {
        "description": "Returns a spending forecast for the next 30 days based on historical transaction data",
        "produces": ["application/json"],
        "tags": ["analytics"],
        "summary": "Get spending forecast",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/analytics.DailySpend"
              }
            }
          },
          "400": {
            "description": "Not enough data to generate a forecast",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Failed to retrieve transactions",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/categories": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Get all categories for the authenticated user",
        "produces": ["application/json"],
        "tags": ["categories"],
        "summary": "List user categories",
        "parameters": [
          {
            "type": "string",
            "description": "User ID",
            "name": "user-id",
            "in": "header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/models.UserCategory"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Failed to list categories",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Add a new category for the authenticated user",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["categories"],
        "summary": "Add a new category",
        "parameters": [
          {
            "type": "string",
            "description": "User ID",
            "name": "user-id",
            "in": "header",
            "required": true
          },
          {
            "description": "Category to add",
            "name": "category",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.UserCategory"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Invalid request body",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Failed to add category",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/categories/{id}": {
      "put": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Update an existing category for the authenticated user",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["categories"],
        "summary": "Update a category",
        "parameters": [
          {
            "type": "string",
            "description": "User ID",
            "name": "user-id",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Category ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Updated category",
            "name": "category",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.UserCategory"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Missing category ID or invalid request body",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Failed to update category",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Delete a category for the authenticated user",
        "produces": ["application/json"],
        "tags": ["categories"],
        "summary": "Delete a category",
        "parameters": [
          {
            "type": "string",
            "description": "User ID",
            "name": "user-id",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Category ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Missing category ID",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Failed to delete category",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "description": "Returns the health status of the API",
        "produces": ["application/json"],
        "tags": ["health"],
        "summary": "Health check",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Failed to encode response",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/import": {
      "post": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Import transactions for the authenticated user from a CSV file",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "tags": ["import"],
        "summary": "Import transactions from CSV",
        "parameters": [
          {
            "type": "string",
            "description": "User ID",
            "name": "user-id",
            "in": "header",
            "required": true
          },
          {
            "type": "file",
            "description": "CSV file",
            "name": "file",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/models.Transaction"
              }
            }
          },
          "400": {
            "description": "Failed to read file",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Failed to parse csv or save transactions",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/transactions": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "List transactions for the authenticated user, optionally filtered",
        "produces": ["application/json"],
        "tags": ["transactions"],
        "summary": "List transactions",
        "parameters": [
          {
            "type": "string",
            "description": "User ID",
            "name": "user-id",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Filters (key=value)",
            "name": "filters",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/models.Transaction"
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Failed to list transactions",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "post": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Create a new transaction for the authenticated user",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["transactions"],
        "summary": "Create a transaction",
        "parameters": [
          {
            "type": "string",
            "description": "User ID",
            "name": "user-id",
            "in": "header",
            "required": true
          },
          {
            "description": "Transaction to create",
            "name": "transaction",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.Transaction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Transaction"
            }
          },
          "400": {
            "description": "Invalid request body",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Failed to create transaction",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/transactions/bulk": {
      "post": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Add multiple transactions for the authenticated user",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["transactions"],
        "summary": "Bulk add transactions",
        "parameters": [
          {
            "type": "string",
            "description": "User ID",
            "name": "user-id",
            "in": "header",
            "required": true
          },
          {
            "description": "Transactions to add",
            "name": "transactions",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/models.Transaction"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/models.Transaction"
              }
            }
          },
          "400": {
            "description": "Invalid request body",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Failed to bulk add transactions",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/transactions/{id}": {
      "get": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Get a transaction by its ID for the authenticated user",
        "produces": ["application/json"],
        "tags": ["transactions"],
        "summary": "Get transaction by ID",
        "parameters": [
          {
            "type": "string",
            "description": "User ID",
            "name": "user-id",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Transaction ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Transaction"
            }
          },
          "400": {
            "description": "Missing transaction ID",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Transaction not found",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "put": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Update an existing transaction for the authenticated user",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["transactions"],
        "summary": "Update a transaction",
        "parameters": [
          {
            "type": "string",
            "description": "User ID",
            "name": "user-id",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Transaction ID",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "description": "Transaction update data",
            "name": "transaction",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/models.TransactionUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.Transaction"
            }
          },
          "400": {
            "description": "Missing transaction ID or invalid request body",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Transaction not found",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Failed to update transaction",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "delete": {
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "description": "Delete a transaction for the authenticated user",
        "produces": ["application/json"],
        "tags": ["transactions"],
        "summary": "Delete a transaction",
        "parameters": [
          {
            "type": "string",
            "description": "User ID",
            "name": "user-id",
            "in": "header",
            "required": true
          },
          {
            "type": "string",
            "description": "Transaction ID",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Missing transaction ID",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "type": "string"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Transaction not found",
            "schema": {
              "type": "string"
            }
          },
          "500": {
            "description": "Failed to delete transaction",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "analytics.DailySpend": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string"
        },
        "total": {
          "type": "number",
          "format": "float64"
        }
      }
    },
    "models.Transaction": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "integer"
        },
        "bankReference": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "insertedAt": {
          "type": "string"
        },
        "transactionDateTime": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        }
      }
    },
    "models.TransactionUpdate": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "integer"
        },
        "category": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        }
      }
    },
    "models.UserCategory": {
      "type": "object",
      "properties": {
        "keywords": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        }
      }
    }
  }
}
