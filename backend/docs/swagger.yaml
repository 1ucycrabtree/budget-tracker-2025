basePath: /
definitions:
  models.Transaction:
    properties:
      amount:
        type: integer
      bankReference:
        type: string
      category:
        type: string
      description:
        type: string
      id:
        type: string
      insertedAt:
        type: string
      transactionDateTime:
        type: string
      type:
        type: string
      updatedAt:
        type: string
      userId:
        type: string
    type: object
  models.TransactionUpdate:
    properties:
      amount:
        type: integer
      category:
        type: string
      description:
        type: string
      type:
        type: string
      updatedAt:
        type: string
    type: object
  models.UserCategory:
    properties:
      keywords:
        items:
          type: string
        type: array
      name:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    name: Lucy Crabtree
    url: https://github.com/1ucycrabtree
  description: Backend service for automatically importing and categorising user transactions.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: Auto Budget Tracker API
  version: "1.0"
paths:
  /categories:
    get:
      description: Get all categories for the authenticated user
      parameters:
        - description: User ID
          in: header
          name: user-id
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: "#/definitions/models.UserCategory"
            type: array
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Failed to list categories
          schema:
            type: string
      security:
        - ApiKeyAuth: []
      summary: List user categories
      tags:
        - categories
    post:
      consumes:
        - application/json
      description: Add a new category for the authenticated user
      parameters:
        - description: User ID
          in: header
          name: user-id
          required: true
          type: string
        - description: Category to add
          in: body
          name: category
          required: true
          schema:
            $ref: "#/definitions/models.UserCategory"
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Invalid request body
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Failed to add category
          schema:
            type: string
      security:
        - ApiKeyAuth: []
      summary: Add a new category
      tags:
        - categories
  /categories/{id}:
    delete:
      description: Delete a category for the authenticated user
      parameters:
        - description: User ID
          in: header
          name: user-id
          required: true
          type: string
        - description: Category ID
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "400":
          description: Missing category ID
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Failed to delete category
          schema:
            type: string
      security:
        - ApiKeyAuth: []
      summary: Delete a category
      tags:
        - categories
    put:
      consumes:
        - application/json
      description: Update an existing category for the authenticated user
      parameters:
        - description: User ID
          in: header
          name: user-id
          required: true
          type: string
        - description: Category ID
          in: path
          name: id
          required: true
          type: string
        - description: Updated category
          in: body
          name: category
          required: true
          schema:
            $ref: "#/definitions/models.UserCategory"
      produces:
        - application/json
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "400":
          description: Missing category ID or invalid request body
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Failed to update category
          schema:
            type: string
      security:
        - ApiKeyAuth: []
      summary: Update a category
      tags:
        - categories
  /health:
    get:
      description: Returns the health status of the API
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Failed to encode response
          schema:
            type: string
      summary: Health check
      tags:
        - health
  /import:
    post:
      consumes:
        - multipart/form-data
      description: Import transactions for the authenticated user from a CSV file
      parameters:
        - description: User ID
          in: header
          name: user-id
          required: true
          type: string
        - description: CSV file
          in: formData
          name: file
          required: true
          type: file
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: "#/definitions/models.Transaction"
            type: array
        "400":
          description: Failed to read file
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Failed to parse csv or save transactions
          schema:
            type: string
      security:
        - ApiKeyAuth: []
      summary: Import transactions from CSV
      tags:
        - import
  /transactions:
    get:
      description: List transactions for the authenticated user, optionally filtered
      parameters:
        - description: User ID
          in: header
          name: user-id
          required: true
          type: string
        - description: Filters (key=value)
          in: query
          name: filters
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: "#/definitions/models.Transaction"
            type: array
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Failed to list transactions
          schema:
            type: string
      security:
        - ApiKeyAuth: []
      summary: List transactions
      tags:
        - transactions
    post:
      consumes:
        - application/json
      description: Create a new transaction for the authenticated user
      parameters:
        - description: User ID
          in: header
          name: user-id
          required: true
          type: string
        - description: Transaction to create
          in: body
          name: transaction
          required: true
          schema:
            $ref: "#/definitions/models.Transaction"
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/models.Transaction"
        "400":
          description: Invalid request body
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Failed to create transaction
          schema:
            type: string
      security:
        - ApiKeyAuth: []
      summary: Create a transaction
      tags:
        - transactions
  /transactions/{id}:
    delete:
      description: Delete a transaction for the authenticated user
      parameters:
        - description: User ID
          in: header
          name: user-id
          required: true
          type: string
        - description: Transaction ID
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Missing transaction ID
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "403":
          description: Forbidden
          schema:
            type: string
        "404":
          description: Transaction not found
          schema:
            type: string
        "500":
          description: Failed to delete transaction
          schema:
            type: string
      security:
        - ApiKeyAuth: []
      summary: Delete a transaction
      tags:
        - transactions
    get:
      description: Get a transaction by its ID for the authenticated user
      parameters:
        - description: User ID
          in: header
          name: user-id
          required: true
          type: string
        - description: Transaction ID
          in: path
          name: id
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/models.Transaction"
        "400":
          description: Missing transaction ID
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "403":
          description: Forbidden
          schema:
            type: string
        "404":
          description: Transaction not found
          schema:
            type: string
      security:
        - ApiKeyAuth: []
      summary: Get transaction by ID
      tags:
        - transactions
    put:
      consumes:
        - application/json
      description: Update an existing transaction for the authenticated user
      parameters:
        - description: User ID
          in: header
          name: user-id
          required: true
          type: string
        - description: Transaction ID
          in: path
          name: id
          required: true
          type: string
        - description: Transaction update data
          in: body
          name: transaction
          required: true
          schema:
            $ref: "#/definitions/models.TransactionUpdate"
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/models.Transaction"
        "400":
          description: Missing transaction ID or invalid request body
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "403":
          description: Forbidden
          schema:
            type: string
        "404":
          description: Transaction not found
          schema:
            type: string
        "500":
          description: Failed to update transaction
          schema:
            type: string
      security:
        - ApiKeyAuth: []
      summary: Update a transaction
      tags:
        - transactions
  /transactions/bulk:
    post:
      consumes:
        - application/json
      description: Add multiple transactions for the authenticated user
      parameters:
        - description: User ID
          in: header
          name: user-id
          required: true
          type: string
        - description: Transactions to add
          in: body
          name: transactions
          required: true
          schema:
            items:
              $ref: "#/definitions/models.Transaction"
            type: array
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: "#/definitions/models.Transaction"
            type: array
        "400":
          description: Invalid request body
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
        "500":
          description: Failed to bulk add transactions
          schema:
            type: string
      security:
        - ApiKeyAuth: []
      summary: Bulk add transactions
      tags:
        - transactions
swagger: "2.0"
